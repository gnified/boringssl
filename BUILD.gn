# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/toolchain/android/settings.gni")
import("//build/config/arm.gni")
import("//build/config/sanitizers/sanitizers.gni")
import("BUILD.generated.gni")
import("BUILD.generated_tests.gni")

declare_args() {
  boringssl_shared = false
  boringssl_no_asm = true
}

# Config for us and everybody else depending on BoringSSL.
config("external_config") {
  include_dirs = [ "src/include" ]
  if (boringssl_shared) {
    defines = [ "BORINGSSL_SHARED_LIBRARY" ]
  }
}

# Config internal to this build file, shared by boringssl and boringssl_fuzzer.
config("internal_config") {
  visibility = [ ":*" ]  # Only targets in this file can depend on this.
  defines = [
    "BORINGSSL_ALLOW_CXX_RUNTIME",
    "BORINGSSL_IMPLEMENTATION",
    "BORINGSSL_NO_STATIC_INITIALIZER",
    "OPENSSL_SMALL",
  ]
  if (is_posix) {
    cflags_c = [ "-std=c99" ]
    defines += [ "_XOPEN_SOURCE=700" ]
  }
}

config("no_asm_config") {
  visibility = [ ":*" ]  # Only targets in this file can depend on this.
  defines = [ "OPENSSL_NO_ASM" ]
}

all_sources = crypto_sources + ssl_sources

# Windows' assembly is built with Yasm. The other platforms use the platform
# assembler.
if (is_win && !is_msan && !boringssl_no_asm) {
  import("$external/yasm/yasm_assemble.gni")
  yasm_assemble("boringssl_asm") {
    if (current_cpu == "x64") {
      sources = crypto_sources_win_x86_64
    } else if (current_cpu == "x86") {
      sources = crypto_sources_win_x86
    }
  }
} else if (!boringssl_no_asm) {
  # This has no sources on some platforms so must be a source_set.
  source_set("boringssl_asm") {
    visibility = [ ":*" ]  # Only targets in this file can depend on this.

    defines = [ "BORINGSSL_CLANG_SUPPORTS_DOT_ARCH" ]
    sources = []
    asmflags = []
    include_dirs = [ "src/include" ]

    if ((current_cpu == "arm" || current_cpu == "arm64") && is_clang &&
        !is_ios) {
      if (current_cpu == "arm" && arm_version != 6) {
        # TODO(hans) Enable integrated-as (crbug.com/124610).
        asmflags += [ "-fno-integrated-as" ]
      }
      if (is_android) {
        rebased_android_toolchain_root =
            rebase_path(android_toolchain_root, root_build_dir)

        # Else /usr/bin/as gets picked up.
        asmflags += [ "-B${rebased_android_toolchain_root}/bin" ]
      }
    }

    if (is_msan) {
      public_configs = [ ":no_asm_config" ]
    } else if (current_cpu == "x64") {
      if (is_mac) {
        sources += crypto_sources_mac_x86_64
      } else if (is_linux || is_android) {
        sources += crypto_sources_linux_x86_64
      } else {
        public_configs = [ ":no_asm_config" ]
      }
    } else if (current_cpu == "x86") {
      if (is_mac) {
        sources += crypto_sources_mac_x86
      } else if (is_linux || is_android) {
        sources += crypto_sources_linux_x86
      } else {
        public_configs = [ ":no_asm_config" ]
      }
    } else if (current_cpu == "arm") {
      if (is_linux || is_android) {
        sources += crypto_sources_linux_arm
      } else if (is_ios) {
        sources += crypto_sources_ios_arm
      } else {
        public_configs = [ ":no_asm_config" ]
      }
    } else if (current_cpu == "arm64") {
      if (is_linux || is_android) {
        sources += crypto_sources_linux_aarch64
      } else if (is_ios) {
        sources += crypto_sources_ios_aarch64
      } else {
        public_configs = [ ":no_asm_config" ]
      }
    } else {
      public_configs = [ ":no_asm_config" ]
    }
  }
} else {
  group("boringssl_asm") {
    visibility = [ ":*" ]  # Only targets in this file can depend on this.
    public_configs = [ ":no_asm_config" ]
  }
}

if (boringssl_shared) {
  _target_type = "shared_library"
} else {
  _target_type = "static_library"
}

target(_target_type, "boringssl") {
  sources = all_sources
  deps = [
    ":boringssl_asm",
  ]

  public_configs = [ ":external_config" ]
  configs += [ ":internal_config" ]
}
